<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
             xmlns:material="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:vm="clr-namespace:AvaloniaManager.ViewModels"
             xmlns:local="clr-namespace:AvaloniaManager.Models"
             xmlns:converters="clr-namespace:AvaloniaManager.Converters"
			 xmlns:sys="clr-namespace:System;assembly=netstandard"
			 xmlns:col="clr-namespace:System.Collections;assembly=System.Runtime"
             mc:Ignorable="d"
             d:DesignWidth="800" d:DesignHeight="450"
             x:Class="AvaloniaManager.Views.EmployeesView"
             x:DataType="vm:EmployeesViewModel"
             Name="Root">

	<UserControl.Resources>
		<ResourceDictionary>
			<converters:ElementIndexConverter x:Key="IndexConverter"/>
			<converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
			<converters:BoolToVisibilityConverter x:Key="InverseBoolToVisibility" IsInverse="True"/>

			<!-- Стиль для невалидных ячеек -->
			<Style x:Key="HoverDataGridCellStyle" Selector="DataGridCell:pointerover">
				<Setter Property="Background" Value="#FFF5F5"/>
				<Setter Property="BorderBrush" Value="Red"/>
				<Setter Property="BorderThickness" Value="1"/>
			</Style>

			<col:ArrayList x:Key="ContractTypes">
				<sys:String>Авторский договор</sys:String>
				<sys:String>Договор на создание и использование служебного произведения</sys:String>
				<sys:String>Договор на создание и использование объекта авторского права</sys:String>
				<sys:String>Договор уступок исключительного права</sys:String>
			</col:ArrayList>
		</ResourceDictionary>
	</UserControl.Resources>

	<StackPanel Margin="16" Spacing="16">
		<!-- DataGrid с нумерацией -->
		<DataGrid ItemsSource="{Binding Employees}"
                 SelectedItem="{Binding SelectedEmployee}"
                 AutoGenerateColumns="False"
                 IsReadOnly="True"
                 Name="EmployeesDataGrid"
                 IsVisible="{Binding IsAddingMode, Converter={StaticResource InverseBoolToVisibility}}">

			<DataGrid.Columns>
				<DataGridTextColumn Header="ID" Binding="{Binding Id}" IsVisible="False"/>
				<DataGridTextColumn Header="Фамилия" Binding="{Binding SurName}" Width="*"/>
				<DataGridTextColumn Header="Имя" Binding="{Binding Name}" Width="*"/>
				<DataGridTextColumn Header="Отчество" Binding="{Binding FatherName}" Width="*"/>
				<DataGridTextColumn Header="Тип договора" Binding="{Binding ContractName}" Width="Auto"/>
				<DataGridTextColumn Header="№ договора" Binding="{Binding ContractNumber}" Width="Auto"/>
				<DataGridTextColumn Header="Начало договора"
                   Binding="{Binding ContractStart, StringFormat='{}{0:dd.MM.yyyy}'}"
                   Width="*"/>
				<DataGridTextColumn Header="Окончание договора"
                                   Binding="{Binding ContractEnd, StringFormat='{}{0:dd.MM.yyyy}'}"
                                   Width="*"/>
				<DataGridTextColumn Header="Псевдоним" Binding="{Binding NickName}" Width="*"/>
				<DataGridCheckBoxColumn Header="Штатный" Binding="{Binding Shtatni}" Width="Auto"/>
			</DataGrid.Columns>
		</DataGrid>

		<Border Background="#F5F5F5" Padding="10" CornerRadius="5"
               IsVisible="{Binding IsAddingMode, Converter={StaticResource BoolToVisibility}}">
			<StackPanel Spacing="10">
				<TextBlock Text="Добавление новых сотрудников" FontWeight="Bold" FontSize="16"/>

				<!-- DataGrid для новых сотрудников -->
				<DataGrid ItemsSource="{Binding NewEmployees}"
						  AutoGenerateColumns="False"
						  >

					<DataGrid.Columns>
						<!-- Обязательные поля -->
						<DataGridTextColumn Header="Фамилия" Binding="{Binding SurName}" Width="*"/>
						<DataGridTextColumn Header="Имя" Binding="{Binding Name}" Width="*"/>
						<DataGridTextColumn Header="Отчество" Binding="{Binding FatherName}" Width="*"/>

						<!-- Выпадающий список для типа договора -->
						<DataGridTemplateColumn Header="Тип договора" Width="auto">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<ComboBox Theme="{StaticResource MaterialFilledComboBox}"
											  ItemsSource="{StaticResource ContractTypes}"
											  SelectedItem="{Binding ContractName}"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<!-- Номер договора -->
						<DataGridTextColumn Header="№ договора"
                                          Binding="{Binding ContractNumber}"
                                          Width="auto"/>

						<!-- Даты -->
						<DataGridTextColumn Header="Начало контракта"
										   Binding="{Binding ContractStart, StringFormat='{}{0:dd.MM.yyyy}'}"
										   Width="auto"/>
						<DataGridTextColumn Header="Окончание контракта"
										   Binding="{Binding ContractEnd, StringFormat='{}{0:dd.MM.yyyy}'}"
										   Width="auto"/>

						<DataGridTextColumn Header="Псевдоним" Binding="{Binding NickName}" Width="auto"/>
						<DataGridCheckBoxColumn Header="Штатный" Binding="{Binding Shtatni}" Width="Auto"/>
					</DataGrid.Columns>
				</DataGrid>

				<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Spacing="10">
					<Button Content="Добавить строку" Command="{Binding AddNewRowCommand}"/>
					<Button Content="Сохранить" Command="{Binding SaveEmployeesCommand}"
							Classes="Primary"/>
					<Button Content="Сброс" Command="{Binding ResetAddingCommand}"/>
					<Button Content="Выход" Command="{Binding ExitCommand}"/>
				</StackPanel>
			</StackPanel>
		</Border>

		<!-- Кнопки управления -->
		<StackPanel Orientation="Horizontal" Spacing="10">
			<Button Content="Добавить сотрудников" Command="{Binding AddEmployeeCommand}"
                    IsVisible="{Binding IsAddingMode, Converter={StaticResource InverseBoolToVisibility}}"/>
		</StackPanel>

		<!-- Пагинация -->
		<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="16"
                    IsVisible="{Binding IsAddingMode, Converter={StaticResource InverseBoolToVisibility}}">
			<Button Content="← Назад"
                   Command="{Binding PreviousPageCommand}"
                   IsEnabled="{Binding HasPreviousPage}"/>
			<TextBlock Text="{Binding CurrentPage, StringFormat='Страница {0}'}"
                      VerticalAlignment="Center"/>
			<Button Content="Вперед →"
                   Command="{Binding NextPageCommand}"
                   IsEnabled="{Binding HasNextPage}"/>
		</StackPanel>
	</StackPanel>
</UserControl>